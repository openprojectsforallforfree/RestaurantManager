//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.3053
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace Reports.Build.rptFiles {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("physicalworkarea")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class physicalworkarea : global::System.Data.DataSet {
        
        private dtPhysicalWrkingareaDataTable tabledtPhysicalWrkingarea;
        
        private dtOrgStructureDataTable tabledtOrgStructure;
        
        private dtHelpingOrganizationDataTable tabledtHelpingOrganization;
        
        private dtWorkingComiteeDataTable tabledtWorkingComitee;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public physicalworkarea() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected physicalworkarea(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["dtPhysicalWrkingarea"] != null)) {
                    base.Tables.Add(new dtPhysicalWrkingareaDataTable(ds.Tables["dtPhysicalWrkingarea"]));
                }
                if ((ds.Tables["dtOrgStructure"] != null)) {
                    base.Tables.Add(new dtOrgStructureDataTable(ds.Tables["dtOrgStructure"]));
                }
                if ((ds.Tables["dtHelpingOrganization"] != null)) {
                    base.Tables.Add(new dtHelpingOrganizationDataTable(ds.Tables["dtHelpingOrganization"]));
                }
                if ((ds.Tables["dtWorkingComitee"] != null)) {
                    base.Tables.Add(new dtWorkingComiteeDataTable(ds.Tables["dtWorkingComitee"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtPhysicalWrkingareaDataTable dtPhysicalWrkingarea {
            get {
                return this.tabledtPhysicalWrkingarea;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtOrgStructureDataTable dtOrgStructure {
            get {
                return this.tabledtOrgStructure;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtHelpingOrganizationDataTable dtHelpingOrganization {
            get {
                return this.tabledtHelpingOrganization;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public dtWorkingComiteeDataTable dtWorkingComitee {
            get {
                return this.tabledtWorkingComitee;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override global::System.Data.DataSet Clone() {
            physicalworkarea cln = ((physicalworkarea)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["dtPhysicalWrkingarea"] != null)) {
                    base.Tables.Add(new dtPhysicalWrkingareaDataTable(ds.Tables["dtPhysicalWrkingarea"]));
                }
                if ((ds.Tables["dtOrgStructure"] != null)) {
                    base.Tables.Add(new dtOrgStructureDataTable(ds.Tables["dtOrgStructure"]));
                }
                if ((ds.Tables["dtHelpingOrganization"] != null)) {
                    base.Tables.Add(new dtHelpingOrganizationDataTable(ds.Tables["dtHelpingOrganization"]));
                }
                if ((ds.Tables["dtWorkingComitee"] != null)) {
                    base.Tables.Add(new dtWorkingComiteeDataTable(ds.Tables["dtWorkingComitee"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tabledtPhysicalWrkingarea = ((dtPhysicalWrkingareaDataTable)(base.Tables["dtPhysicalWrkingarea"]));
            if ((initTable == true)) {
                if ((this.tabledtPhysicalWrkingarea != null)) {
                    this.tabledtPhysicalWrkingarea.InitVars();
                }
            }
            this.tabledtOrgStructure = ((dtOrgStructureDataTable)(base.Tables["dtOrgStructure"]));
            if ((initTable == true)) {
                if ((this.tabledtOrgStructure != null)) {
                    this.tabledtOrgStructure.InitVars();
                }
            }
            this.tabledtHelpingOrganization = ((dtHelpingOrganizationDataTable)(base.Tables["dtHelpingOrganization"]));
            if ((initTable == true)) {
                if ((this.tabledtHelpingOrganization != null)) {
                    this.tabledtHelpingOrganization.InitVars();
                }
            }
            this.tabledtWorkingComitee = ((dtWorkingComiteeDataTable)(base.Tables["dtWorkingComitee"]));
            if ((initTable == true)) {
                if ((this.tabledtWorkingComitee != null)) {
                    this.tabledtWorkingComitee.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "physicalworkarea";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/physicalworkarea.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tabledtPhysicalWrkingarea = new dtPhysicalWrkingareaDataTable();
            base.Tables.Add(this.tabledtPhysicalWrkingarea);
            this.tabledtOrgStructure = new dtOrgStructureDataTable();
            base.Tables.Add(this.tabledtOrgStructure);
            this.tabledtHelpingOrganization = new dtHelpingOrganizationDataTable();
            base.Tables.Add(this.tabledtHelpingOrganization);
            this.tabledtWorkingComitee = new dtWorkingComiteeDataTable();
            base.Tables.Add(this.tabledtWorkingComitee);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtPhysicalWrkingarea() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtOrgStructure() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtHelpingOrganization() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializedtWorkingComitee() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            physicalworkarea ds = new physicalworkarea();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        public delegate void dtPhysicalWrkingareaRowChangeEventHandler(object sender, dtPhysicalWrkingareaRowChangeEvent e);
        
        public delegate void dtOrgStructureRowChangeEventHandler(object sender, dtOrgStructureRowChangeEvent e);
        
        public delegate void dtHelpingOrganizationRowChangeEventHandler(object sender, dtHelpingOrganizationRowChangeEvent e);
        
        public delegate void dtWorkingComiteeRowChangeEventHandler(object sender, dtWorkingComiteeRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtPhysicalWrkingareaDataTable : global::System.Data.TypedTableBase<dtPhysicalWrkingareaRow> {
            
            private global::System.Data.DataColumn columnSno;
            
            private global::System.Data.DataColumn columnZone;
            
            private global::System.Data.DataColumn columnLocalBody;
            
            private global::System.Data.DataColumn columnDistrict;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPhysicalWrkingareaDataTable() {
                this.TableName = "dtPhysicalWrkingarea";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtPhysicalWrkingareaDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtPhysicalWrkingareaDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SnoColumn {
                get {
                    return this.columnSno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn ZoneColumn {
                get {
                    return this.columnZone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn LocalBodyColumn {
                get {
                    return this.columnLocalBody;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn DistrictColumn {
                get {
                    return this.columnDistrict;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPhysicalWrkingareaRow this[int index] {
                get {
                    return ((dtPhysicalWrkingareaRow)(this.Rows[index]));
                }
            }
            
            public event dtPhysicalWrkingareaRowChangeEventHandler dtPhysicalWrkingareaRowChanging;
            
            public event dtPhysicalWrkingareaRowChangeEventHandler dtPhysicalWrkingareaRowChanged;
            
            public event dtPhysicalWrkingareaRowChangeEventHandler dtPhysicalWrkingareaRowDeleting;
            
            public event dtPhysicalWrkingareaRowChangeEventHandler dtPhysicalWrkingareaRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtPhysicalWrkingareaRow(dtPhysicalWrkingareaRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPhysicalWrkingareaRow AdddtPhysicalWrkingareaRow(string Sno, string Zone, string LocalBody, string District) {
                dtPhysicalWrkingareaRow rowdtPhysicalWrkingareaRow = ((dtPhysicalWrkingareaRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Sno,
                        Zone,
                        LocalBody,
                        District};
                rowdtPhysicalWrkingareaRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtPhysicalWrkingareaRow);
                return rowdtPhysicalWrkingareaRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtPhysicalWrkingareaDataTable cln = ((dtPhysicalWrkingareaDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtPhysicalWrkingareaDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSno = base.Columns["Sno"];
                this.columnZone = base.Columns["Zone"];
                this.columnLocalBody = base.Columns["LocalBody"];
                this.columnDistrict = base.Columns["District"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSno = new global::System.Data.DataColumn("Sno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSno);
                this.columnZone = new global::System.Data.DataColumn("Zone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnZone);
                this.columnLocalBody = new global::System.Data.DataColumn("LocalBody", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnLocalBody);
                this.columnDistrict = new global::System.Data.DataColumn("District", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDistrict);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPhysicalWrkingareaRow NewdtPhysicalWrkingareaRow() {
                return ((dtPhysicalWrkingareaRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtPhysicalWrkingareaRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtPhysicalWrkingareaRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtPhysicalWrkingareaRowChanged != null)) {
                    this.dtPhysicalWrkingareaRowChanged(this, new dtPhysicalWrkingareaRowChangeEvent(((dtPhysicalWrkingareaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtPhysicalWrkingareaRowChanging != null)) {
                    this.dtPhysicalWrkingareaRowChanging(this, new dtPhysicalWrkingareaRowChangeEvent(((dtPhysicalWrkingareaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtPhysicalWrkingareaRowDeleted != null)) {
                    this.dtPhysicalWrkingareaRowDeleted(this, new dtPhysicalWrkingareaRowChangeEvent(((dtPhysicalWrkingareaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtPhysicalWrkingareaRowDeleting != null)) {
                    this.dtPhysicalWrkingareaRowDeleting(this, new dtPhysicalWrkingareaRowChangeEvent(((dtPhysicalWrkingareaRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtPhysicalWrkingareaRow(dtPhysicalWrkingareaRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                physicalworkarea ds = new physicalworkarea();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtPhysicalWrkingareaDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtOrgStructureDataTable : global::System.Data.TypedTableBase<dtOrgStructureRow> {
            
            private global::System.Data.DataColumn columnEthnicity;
            
            private global::System.Data.DataColumn columnM_simple;
            
            private global::System.Data.DataColumn columnF_simple;
            
            private global::System.Data.DataColumn columnT_simple;
            
            private global::System.Data.DataColumn columnTot_simple;
            
            private global::System.Data.DataColumn columnM_Work;
            
            private global::System.Data.DataColumn columnF_Work;
            
            private global::System.Data.DataColumn columnT_Work;
            
            private global::System.Data.DataColumn columnTot_Work;
            
            private global::System.Data.DataColumn columnM_Emp;
            
            private global::System.Data.DataColumn columnF_Emp;
            
            private global::System.Data.DataColumn columnT_Emp;
            
            private global::System.Data.DataColumn columnTot_Emp;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOrgStructureDataTable() {
                this.TableName = "dtOrgStructure";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtOrgStructureDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtOrgStructureDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EthnicityColumn {
                get {
                    return this.columnEthnicity;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M_simpleColumn {
                get {
                    return this.columnM_simple;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F_simpleColumn {
                get {
                    return this.columnF_simple;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T_simpleColumn {
                get {
                    return this.columnT_simple;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tot_simpleColumn {
                get {
                    return this.columnTot_simple;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M_WorkColumn {
                get {
                    return this.columnM_Work;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F_WorkColumn {
                get {
                    return this.columnF_Work;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T_WorkColumn {
                get {
                    return this.columnT_Work;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tot_WorkColumn {
                get {
                    return this.columnTot_Work;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn M_EmpColumn {
                get {
                    return this.columnM_Emp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn F_EmpColumn {
                get {
                    return this.columnF_Emp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn T_EmpColumn {
                get {
                    return this.columnT_Emp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn Tot_EmpColumn {
                get {
                    return this.columnTot_Emp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOrgStructureRow this[int index] {
                get {
                    return ((dtOrgStructureRow)(this.Rows[index]));
                }
            }
            
            public event dtOrgStructureRowChangeEventHandler dtOrgStructureRowChanging;
            
            public event dtOrgStructureRowChangeEventHandler dtOrgStructureRowChanged;
            
            public event dtOrgStructureRowChangeEventHandler dtOrgStructureRowDeleting;
            
            public event dtOrgStructureRowChangeEventHandler dtOrgStructureRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtOrgStructureRow(dtOrgStructureRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOrgStructureRow AdddtOrgStructureRow(string Ethnicity, string M_simple, string F_simple, string T_simple, string Tot_simple, string M_Work, string F_Work, string T_Work, string Tot_Work, string M_Emp, string F_Emp, string T_Emp, string Tot_Emp) {
                dtOrgStructureRow rowdtOrgStructureRow = ((dtOrgStructureRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Ethnicity,
                        M_simple,
                        F_simple,
                        T_simple,
                        Tot_simple,
                        M_Work,
                        F_Work,
                        T_Work,
                        Tot_Work,
                        M_Emp,
                        F_Emp,
                        T_Emp,
                        Tot_Emp};
                rowdtOrgStructureRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtOrgStructureRow);
                return rowdtOrgStructureRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtOrgStructureDataTable cln = ((dtOrgStructureDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtOrgStructureDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnEthnicity = base.Columns["Ethnicity"];
                this.columnM_simple = base.Columns["M_simple"];
                this.columnF_simple = base.Columns["F_simple"];
                this.columnT_simple = base.Columns["T_simple"];
                this.columnTot_simple = base.Columns["Tot_simple"];
                this.columnM_Work = base.Columns["M_Work"];
                this.columnF_Work = base.Columns["F_Work"];
                this.columnT_Work = base.Columns["T_Work"];
                this.columnTot_Work = base.Columns["Tot_Work"];
                this.columnM_Emp = base.Columns["M_Emp"];
                this.columnF_Emp = base.Columns["F_Emp"];
                this.columnT_Emp = base.Columns["T_Emp"];
                this.columnTot_Emp = base.Columns["Tot_Emp"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnEthnicity = new global::System.Data.DataColumn("Ethnicity", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEthnicity);
                this.columnM_simple = new global::System.Data.DataColumn("M_simple", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_simple);
                this.columnF_simple = new global::System.Data.DataColumn("F_simple", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF_simple);
                this.columnT_simple = new global::System.Data.DataColumn("T_simple", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT_simple);
                this.columnTot_simple = new global::System.Data.DataColumn("Tot_simple", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTot_simple);
                this.columnM_Work = new global::System.Data.DataColumn("M_Work", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_Work);
                this.columnF_Work = new global::System.Data.DataColumn("F_Work", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF_Work);
                this.columnT_Work = new global::System.Data.DataColumn("T_Work", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT_Work);
                this.columnTot_Work = new global::System.Data.DataColumn("Tot_Work", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTot_Work);
                this.columnM_Emp = new global::System.Data.DataColumn("M_Emp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnM_Emp);
                this.columnF_Emp = new global::System.Data.DataColumn("F_Emp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnF_Emp);
                this.columnT_Emp = new global::System.Data.DataColumn("T_Emp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnT_Emp);
                this.columnTot_Emp = new global::System.Data.DataColumn("Tot_Emp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTot_Emp);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOrgStructureRow NewdtOrgStructureRow() {
                return ((dtOrgStructureRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtOrgStructureRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtOrgStructureRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtOrgStructureRowChanged != null)) {
                    this.dtOrgStructureRowChanged(this, new dtOrgStructureRowChangeEvent(((dtOrgStructureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtOrgStructureRowChanging != null)) {
                    this.dtOrgStructureRowChanging(this, new dtOrgStructureRowChangeEvent(((dtOrgStructureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtOrgStructureRowDeleted != null)) {
                    this.dtOrgStructureRowDeleted(this, new dtOrgStructureRowChangeEvent(((dtOrgStructureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtOrgStructureRowDeleting != null)) {
                    this.dtOrgStructureRowDeleting(this, new dtOrgStructureRowChangeEvent(((dtOrgStructureRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtOrgStructureRow(dtOrgStructureRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                physicalworkarea ds = new physicalworkarea();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtOrgStructureDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtHelpingOrganizationDataTable : global::System.Data.TypedTableBase<dtHelpingOrganizationRow> {
            
            private global::System.Data.DataColumn columnSno;
            
            private global::System.Data.DataColumn columnname;
            
            private global::System.Data.DataColumn columnobjective;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtHelpingOrganizationDataTable() {
                this.TableName = "dtHelpingOrganization";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtHelpingOrganizationDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtHelpingOrganizationDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SnoColumn {
                get {
                    return this.columnSno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn nameColumn {
                get {
                    return this.columnname;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn objectiveColumn {
                get {
                    return this.columnobjective;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtHelpingOrganizationRow this[int index] {
                get {
                    return ((dtHelpingOrganizationRow)(this.Rows[index]));
                }
            }
            
            public event dtHelpingOrganizationRowChangeEventHandler dtHelpingOrganizationRowChanging;
            
            public event dtHelpingOrganizationRowChangeEventHandler dtHelpingOrganizationRowChanged;
            
            public event dtHelpingOrganizationRowChangeEventHandler dtHelpingOrganizationRowDeleting;
            
            public event dtHelpingOrganizationRowChangeEventHandler dtHelpingOrganizationRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtHelpingOrganizationRow(dtHelpingOrganizationRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtHelpingOrganizationRow AdddtHelpingOrganizationRow(string Sno, string name, string objective) {
                dtHelpingOrganizationRow rowdtHelpingOrganizationRow = ((dtHelpingOrganizationRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Sno,
                        name,
                        objective};
                rowdtHelpingOrganizationRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtHelpingOrganizationRow);
                return rowdtHelpingOrganizationRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtHelpingOrganizationDataTable cln = ((dtHelpingOrganizationDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtHelpingOrganizationDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSno = base.Columns["Sno"];
                this.columnname = base.Columns["name"];
                this.columnobjective = base.Columns["objective"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSno = new global::System.Data.DataColumn("Sno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSno);
                this.columnname = new global::System.Data.DataColumn("name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnname);
                this.columnobjective = new global::System.Data.DataColumn("objective", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnobjective);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtHelpingOrganizationRow NewdtHelpingOrganizationRow() {
                return ((dtHelpingOrganizationRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtHelpingOrganizationRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtHelpingOrganizationRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtHelpingOrganizationRowChanged != null)) {
                    this.dtHelpingOrganizationRowChanged(this, new dtHelpingOrganizationRowChangeEvent(((dtHelpingOrganizationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtHelpingOrganizationRowChanging != null)) {
                    this.dtHelpingOrganizationRowChanging(this, new dtHelpingOrganizationRowChangeEvent(((dtHelpingOrganizationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtHelpingOrganizationRowDeleted != null)) {
                    this.dtHelpingOrganizationRowDeleted(this, new dtHelpingOrganizationRowChangeEvent(((dtHelpingOrganizationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtHelpingOrganizationRowDeleting != null)) {
                    this.dtHelpingOrganizationRowDeleting(this, new dtHelpingOrganizationRowChangeEvent(((dtHelpingOrganizationRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtHelpingOrganizationRow(dtHelpingOrganizationRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                physicalworkarea ds = new physicalworkarea();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtHelpingOrganizationDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class dtWorkingComiteeDataTable : global::System.Data.TypedTableBase<dtWorkingComiteeRow> {
            
            private global::System.Data.DataColumn columnSno;
            
            private global::System.Data.DataColumn columnName;
            
            private global::System.Data.DataColumn columnPosition;
            
            private global::System.Data.DataColumn columnEducation;
            
            private global::System.Data.DataColumn columnAge;
            
            private global::System.Data.DataColumn columnSpecialization;
            
            private global::System.Data.DataColumn columnSocialWorkExp;
            
            private global::System.Data.DataColumn columnPhone;
            
            private global::System.Data.DataColumn columnemail;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtWorkingComiteeDataTable() {
                this.TableName = "dtWorkingComitee";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtWorkingComiteeDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected dtWorkingComiteeDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SnoColumn {
                get {
                    return this.columnSno;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PositionColumn {
                get {
                    return this.columnPosition;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn EducationColumn {
                get {
                    return this.columnEducation;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn AgeColumn {
                get {
                    return this.columnAge;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SpecializationColumn {
                get {
                    return this.columnSpecialization;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn SocialWorkExpColumn {
                get {
                    return this.columnSocialWorkExp;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn PhoneColumn {
                get {
                    return this.columnPhone;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataColumn emailColumn {
                get {
                    return this.columnemail;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtWorkingComiteeRow this[int index] {
                get {
                    return ((dtWorkingComiteeRow)(this.Rows[index]));
                }
            }
            
            public event dtWorkingComiteeRowChangeEventHandler dtWorkingComiteeRowChanging;
            
            public event dtWorkingComiteeRowChangeEventHandler dtWorkingComiteeRowChanged;
            
            public event dtWorkingComiteeRowChangeEventHandler dtWorkingComiteeRowDeleting;
            
            public event dtWorkingComiteeRowChangeEventHandler dtWorkingComiteeRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AdddtWorkingComiteeRow(dtWorkingComiteeRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtWorkingComiteeRow AdddtWorkingComiteeRow(string Sno, string Name, string Position, string Education, string Age, string Specialization, string SocialWorkExp, string Phone, string email) {
                dtWorkingComiteeRow rowdtWorkingComiteeRow = ((dtWorkingComiteeRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Sno,
                        Name,
                        Position,
                        Education,
                        Age,
                        Specialization,
                        SocialWorkExp,
                        Phone,
                        email};
                rowdtWorkingComiteeRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowdtWorkingComiteeRow);
                return rowdtWorkingComiteeRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override global::System.Data.DataTable Clone() {
                dtWorkingComiteeDataTable cln = ((dtWorkingComiteeDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataTable CreateInstance() {
                return new dtWorkingComiteeDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSno = base.Columns["Sno"];
                this.columnName = base.Columns["Name"];
                this.columnPosition = base.Columns["Position"];
                this.columnEducation = base.Columns["Education"];
                this.columnAge = base.Columns["Age"];
                this.columnSpecialization = base.Columns["Specialization"];
                this.columnSocialWorkExp = base.Columns["SocialWorkExp"];
                this.columnPhone = base.Columns["Phone"];
                this.columnemail = base.Columns["email"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSno = new global::System.Data.DataColumn("Sno", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSno);
                this.columnName = new global::System.Data.DataColumn("Name", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnPosition = new global::System.Data.DataColumn("Position", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPosition);
                this.columnEducation = new global::System.Data.DataColumn("Education", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEducation);
                this.columnAge = new global::System.Data.DataColumn("Age", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAge);
                this.columnSpecialization = new global::System.Data.DataColumn("Specialization", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSpecialization);
                this.columnSocialWorkExp = new global::System.Data.DataColumn("SocialWorkExp", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSocialWorkExp);
                this.columnPhone = new global::System.Data.DataColumn("Phone", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhone);
                this.columnemail = new global::System.Data.DataColumn("email", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnemail);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtWorkingComiteeRow NewdtWorkingComiteeRow() {
                return ((dtWorkingComiteeRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new dtWorkingComiteeRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override global::System.Type GetRowType() {
                return typeof(dtWorkingComiteeRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.dtWorkingComiteeRowChanged != null)) {
                    this.dtWorkingComiteeRowChanged(this, new dtWorkingComiteeRowChangeEvent(((dtWorkingComiteeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.dtWorkingComiteeRowChanging != null)) {
                    this.dtWorkingComiteeRowChanging(this, new dtWorkingComiteeRowChangeEvent(((dtWorkingComiteeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.dtWorkingComiteeRowDeleted != null)) {
                    this.dtWorkingComiteeRowDeleted(this, new dtWorkingComiteeRowChangeEvent(((dtWorkingComiteeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.dtWorkingComiteeRowDeleting != null)) {
                    this.dtWorkingComiteeRowDeleting(this, new dtWorkingComiteeRowChangeEvent(((dtWorkingComiteeRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemovedtWorkingComiteeRow(dtWorkingComiteeRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                physicalworkarea ds = new physicalworkarea();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "dtWorkingComiteeDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtPhysicalWrkingareaRow : global::System.Data.DataRow {
            
            private dtPhysicalWrkingareaDataTable tabledtPhysicalWrkingarea;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtPhysicalWrkingareaRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtPhysicalWrkingarea = ((dtPhysicalWrkingareaDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sno {
                get {
                    try {
                        return ((string)(this[this.tabledtPhysicalWrkingarea.SnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sno\' in table \'dtPhysicalWrkingarea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPhysicalWrkingarea.SnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Zone {
                get {
                    try {
                        return ((string)(this[this.tabledtPhysicalWrkingarea.ZoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Zone\' in table \'dtPhysicalWrkingarea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPhysicalWrkingarea.ZoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string LocalBody {
                get {
                    try {
                        return ((string)(this[this.tabledtPhysicalWrkingarea.LocalBodyColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'LocalBody\' in table \'dtPhysicalWrkingarea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPhysicalWrkingarea.LocalBodyColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string District {
                get {
                    try {
                        return ((string)(this[this.tabledtPhysicalWrkingarea.DistrictColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'District\' in table \'dtPhysicalWrkingarea\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtPhysicalWrkingarea.DistrictColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSnoNull() {
                return this.IsNull(this.tabledtPhysicalWrkingarea.SnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSnoNull() {
                this[this.tabledtPhysicalWrkingarea.SnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsZoneNull() {
                return this.IsNull(this.tabledtPhysicalWrkingarea.ZoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetZoneNull() {
                this[this.tabledtPhysicalWrkingarea.ZoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLocalBodyNull() {
                return this.IsNull(this.tabledtPhysicalWrkingarea.LocalBodyColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLocalBodyNull() {
                this[this.tabledtPhysicalWrkingarea.LocalBodyColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDistrictNull() {
                return this.IsNull(this.tabledtPhysicalWrkingarea.DistrictColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDistrictNull() {
                this[this.tabledtPhysicalWrkingarea.DistrictColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtOrgStructureRow : global::System.Data.DataRow {
            
            private dtOrgStructureDataTable tabledtOrgStructure;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtOrgStructureRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtOrgStructure = ((dtOrgStructureDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Ethnicity {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.EthnicityColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ethnicity\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.EthnicityColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M_simple {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.M_simpleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M_simple\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.M_simpleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F_simple {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.F_simpleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F_simple\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.F_simpleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T_simple {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.T_simpleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'T_simple\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.T_simpleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tot_simple {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.Tot_simpleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tot_simple\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.Tot_simpleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M_Work {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.M_WorkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M_Work\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.M_WorkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F_Work {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.F_WorkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F_Work\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.F_WorkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T_Work {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.T_WorkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'T_Work\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.T_WorkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tot_Work {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.Tot_WorkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tot_Work\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.Tot_WorkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string M_Emp {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.M_EmpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'M_Emp\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.M_EmpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string F_Emp {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.F_EmpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'F_Emp\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.F_EmpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string T_Emp {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.T_EmpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'T_Emp\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.T_EmpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Tot_Emp {
                get {
                    try {
                        return ((string)(this[this.tabledtOrgStructure.Tot_EmpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Tot_Emp\' in table \'dtOrgStructure\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtOrgStructure.Tot_EmpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEthnicityNull() {
                return this.IsNull(this.tabledtOrgStructure.EthnicityColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEthnicityNull() {
                this[this.tabledtOrgStructure.EthnicityColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM_simpleNull() {
                return this.IsNull(this.tabledtOrgStructure.M_simpleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM_simpleNull() {
                this[this.tabledtOrgStructure.M_simpleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF_simpleNull() {
                return this.IsNull(this.tabledtOrgStructure.F_simpleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF_simpleNull() {
                this[this.tabledtOrgStructure.F_simpleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT_simpleNull() {
                return this.IsNull(this.tabledtOrgStructure.T_simpleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT_simpleNull() {
                this[this.tabledtOrgStructure.T_simpleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTot_simpleNull() {
                return this.IsNull(this.tabledtOrgStructure.Tot_simpleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTot_simpleNull() {
                this[this.tabledtOrgStructure.Tot_simpleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM_WorkNull() {
                return this.IsNull(this.tabledtOrgStructure.M_WorkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM_WorkNull() {
                this[this.tabledtOrgStructure.M_WorkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF_WorkNull() {
                return this.IsNull(this.tabledtOrgStructure.F_WorkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF_WorkNull() {
                this[this.tabledtOrgStructure.F_WorkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT_WorkNull() {
                return this.IsNull(this.tabledtOrgStructure.T_WorkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT_WorkNull() {
                this[this.tabledtOrgStructure.T_WorkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTot_WorkNull() {
                return this.IsNull(this.tabledtOrgStructure.Tot_WorkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTot_WorkNull() {
                this[this.tabledtOrgStructure.Tot_WorkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsM_EmpNull() {
                return this.IsNull(this.tabledtOrgStructure.M_EmpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetM_EmpNull() {
                this[this.tabledtOrgStructure.M_EmpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsF_EmpNull() {
                return this.IsNull(this.tabledtOrgStructure.F_EmpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetF_EmpNull() {
                this[this.tabledtOrgStructure.F_EmpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsT_EmpNull() {
                return this.IsNull(this.tabledtOrgStructure.T_EmpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetT_EmpNull() {
                this[this.tabledtOrgStructure.T_EmpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTot_EmpNull() {
                return this.IsNull(this.tabledtOrgStructure.Tot_EmpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTot_EmpNull() {
                this[this.tabledtOrgStructure.Tot_EmpColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtHelpingOrganizationRow : global::System.Data.DataRow {
            
            private dtHelpingOrganizationDataTable tabledtHelpingOrganization;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtHelpingOrganizationRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtHelpingOrganization = ((dtHelpingOrganizationDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sno {
                get {
                    try {
                        return ((string)(this[this.tabledtHelpingOrganization.SnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sno\' in table \'dtHelpingOrganization\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtHelpingOrganization.SnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string name {
                get {
                    try {
                        return ((string)(this[this.tabledtHelpingOrganization.nameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'name\' in table \'dtHelpingOrganization\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtHelpingOrganization.nameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string objective {
                get {
                    try {
                        return ((string)(this[this.tabledtHelpingOrganization.objectiveColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'objective\' in table \'dtHelpingOrganization\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtHelpingOrganization.objectiveColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSnoNull() {
                return this.IsNull(this.tabledtHelpingOrganization.SnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSnoNull() {
                this[this.tabledtHelpingOrganization.SnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsnameNull() {
                return this.IsNull(this.tabledtHelpingOrganization.nameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetnameNull() {
                this[this.tabledtHelpingOrganization.nameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsobjectiveNull() {
                return this.IsNull(this.tabledtHelpingOrganization.objectiveColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetobjectiveNull() {
                this[this.tabledtHelpingOrganization.objectiveColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class dtWorkingComiteeRow : global::System.Data.DataRow {
            
            private dtWorkingComiteeDataTable tabledtWorkingComitee;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal dtWorkingComiteeRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tabledtWorkingComitee = ((dtWorkingComiteeDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Sno {
                get {
                    try {
                        return ((string)(this[this.tabledtWorkingComitee.SnoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Sno\' in table \'dtWorkingComitee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtWorkingComitee.SnoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    try {
                        return ((string)(this[this.tabledtWorkingComitee.NameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Name\' in table \'dtWorkingComitee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtWorkingComitee.NameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Position {
                get {
                    try {
                        return ((string)(this[this.tabledtWorkingComitee.PositionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Position\' in table \'dtWorkingComitee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtWorkingComitee.PositionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Education {
                get {
                    try {
                        return ((string)(this[this.tabledtWorkingComitee.EducationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Education\' in table \'dtWorkingComitee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtWorkingComitee.EducationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Age {
                get {
                    try {
                        return ((string)(this[this.tabledtWorkingComitee.AgeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Age\' in table \'dtWorkingComitee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtWorkingComitee.AgeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Specialization {
                get {
                    try {
                        return ((string)(this[this.tabledtWorkingComitee.SpecializationColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Specialization\' in table \'dtWorkingComitee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtWorkingComitee.SpecializationColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SocialWorkExp {
                get {
                    try {
                        return ((string)(this[this.tabledtWorkingComitee.SocialWorkExpColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SocialWorkExp\' in table \'dtWorkingComitee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtWorkingComitee.SocialWorkExpColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Phone {
                get {
                    try {
                        return ((string)(this[this.tabledtWorkingComitee.PhoneColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Phone\' in table \'dtWorkingComitee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtWorkingComitee.PhoneColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string email {
                get {
                    try {
                        return ((string)(this[this.tabledtWorkingComitee.emailColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'email\' in table \'dtWorkingComitee\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tabledtWorkingComitee.emailColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSnoNull() {
                return this.IsNull(this.tabledtWorkingComitee.SnoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSnoNull() {
                this[this.tabledtWorkingComitee.SnoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNameNull() {
                return this.IsNull(this.tabledtWorkingComitee.NameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNameNull() {
                this[this.tabledtWorkingComitee.NameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPositionNull() {
                return this.IsNull(this.tabledtWorkingComitee.PositionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPositionNull() {
                this[this.tabledtWorkingComitee.PositionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEducationNull() {
                return this.IsNull(this.tabledtWorkingComitee.EducationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEducationNull() {
                this[this.tabledtWorkingComitee.EducationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsAgeNull() {
                return this.IsNull(this.tabledtWorkingComitee.AgeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetAgeNull() {
                this[this.tabledtWorkingComitee.AgeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSpecializationNull() {
                return this.IsNull(this.tabledtWorkingComitee.SpecializationColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSpecializationNull() {
                this[this.tabledtWorkingComitee.SpecializationColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSocialWorkExpNull() {
                return this.IsNull(this.tabledtWorkingComitee.SocialWorkExpColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSocialWorkExpNull() {
                this[this.tabledtWorkingComitee.SocialWorkExpColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPhoneNull() {
                return this.IsNull(this.tabledtWorkingComitee.PhoneColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPhoneNull() {
                this[this.tabledtWorkingComitee.PhoneColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsemailNull() {
                return this.IsNull(this.tabledtWorkingComitee.emailColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetemailNull() {
                this[this.tabledtWorkingComitee.emailColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtPhysicalWrkingareaRowChangeEvent : global::System.EventArgs {
            
            private dtPhysicalWrkingareaRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPhysicalWrkingareaRowChangeEvent(dtPhysicalWrkingareaRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtPhysicalWrkingareaRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtOrgStructureRowChangeEvent : global::System.EventArgs {
            
            private dtOrgStructureRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOrgStructureRowChangeEvent(dtOrgStructureRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtOrgStructureRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtHelpingOrganizationRowChangeEvent : global::System.EventArgs {
            
            private dtHelpingOrganizationRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtHelpingOrganizationRowChangeEvent(dtHelpingOrganizationRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtHelpingOrganizationRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class dtWorkingComiteeRowChangeEvent : global::System.EventArgs {
            
            private dtWorkingComiteeRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtWorkingComiteeRowChangeEvent(dtWorkingComiteeRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public dtWorkingComiteeRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591